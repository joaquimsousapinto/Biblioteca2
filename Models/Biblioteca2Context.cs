// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Biblioteca2.Models;

public partial class Biblioteca2Context : DbContext
{
    public Biblioteca2Context(DbContextOptions<Biblioteca2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Autor> Autors { get; set; }

    public virtual DbSet<Categorium> Categoria { get; set; }

    public virtual DbSet<Editora> Editoras { get; set; }

    public virtual DbSet<Emprestimo> Emprestimos { get; set; }

    public virtual DbSet<EmprestimoEstado> EmprestimoEstados { get; set; }

    public virtual DbSet<EmprestimoLivro> EmprestimoLivros { get; set; }

    public virtual DbSet<Livro> Livros { get; set; }

    public virtual DbSet<LivroAutor> LivroAutors { get; set; }

    public virtual DbSet<Utilizador> Utilizadors { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Latin1_General_100_CI_AI");

        modelBuilder.Entity<Autor>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Autor__3214EC0754047B33");

            entity.ToTable("Autor");

            entity.HasIndex(e => e.DataNascimento, "IX_Autor_DataNascimento");

            entity.HasIndex(e => e.Nome, "IX_Autor_Nome");

            entity.Property(e => e.Bibliografia)
                .HasMaxLength(1024)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Categorium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Categori__3214EC07A733A844");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Descricao)
                .HasMaxLength(1024)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Editora>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Editora__3214EC0741AB8566");

            entity.ToTable("Editora");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Morada)
                .HasMaxLength(1024)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Emprestimo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Empresti__3214EC073B7A93E9");

            entity.ToTable("Emprestimo");

            entity.HasIndex(e => e.DataDevolucaoPrevista, "IX_Emprestimo_DataDevolucaoPrevista");

            entity.HasIndex(e => e.DataEmprestimo, "IX_Emprestimo_DataEmprestimo");

            entity.HasIndex(e => e.EstadoId, "IX_Emprestimo_EstadoId");

            entity.HasIndex(e => e.UtilizadorId, "IX_Emprestimo_UtilizadorId");

            entity.HasOne(d => d.Estado).WithMany(p => p.Emprestimos)
                .HasForeignKey(d => d.EstadoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Emprestimo_EmprestimoEstado");

            entity.HasOne(d => d.Utilizador).WithMany(p => p.Emprestimos)
                .HasForeignKey(d => d.UtilizadorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Emprestimo_Utilizador");
        });

        modelBuilder.Entity<EmprestimoEstado>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Empresti__3214EC07F54B4E87");

            entity.ToTable("EmprestimoEstado");

            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
        });

        modelBuilder.Entity<EmprestimoLivro>(entity =>
        {
            entity.HasKey(e => new { e.EmprestimoId, e.LivroId });

            entity.ToTable("EmprestimoLivro");

            entity.HasIndex(e => e.LivroId, "IX_EmprestimoLivro_LivroId");

            entity.HasOne(d => d.Emprestimo).WithMany(p => p.EmprestimoLivros)
                .HasForeignKey(d => d.EmprestimoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EmprestimoLivro_Emprestimo");

            entity.HasOne(d => d.Livro).WithMany(p => p.EmprestimoLivros)
                .HasForeignKey(d => d.LivroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EmprestimoLivro_Livro");
        });

        modelBuilder.Entity<Livro>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Livro__3214EC079868E492");

            entity.ToTable("Livro");

            entity.HasIndex(e => e.AnoPublicacao, "IX_Livro_AnoPublicacao");

            entity.HasIndex(e => e.EditoraId, "IX_Livro_EditoraId");

            entity.HasIndex(e => e.Titulo, "IX_Livro_Titulo");

            entity.Property(e => e.Titulo)
                .HasMaxLength(256)
                .IsUnicode(false);

            entity.HasOne(d => d.Editora).WithMany(p => p.Livros)
                .HasForeignKey(d => d.EditoraId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Livro_Editora");

            entity.HasMany(d => d.Categoria).WithMany(p => p.Livros)
                .UsingEntity<Dictionary<string, object>>(
                    "LivroCategorium",
                    r => r.HasOne<Categorium>().WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_LivroCategoria_Autor"),
                    l => l.HasOne<Livro>().WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_LivroCategoria_Livro"),
                    j =>
                    {
                        j.HasKey("LivroId", "CategoriaId");
                        j.ToTable("LivroCategoria");
                        j.HasIndex(new[] { "CategoriaId" }, "IX_LivroCategoria_CategoriaId");
                    });
        });

        modelBuilder.Entity<LivroAutor>(entity =>
        {
            entity.HasKey(e => new { e.LivroId, e.AutorId });

            entity.ToTable("LivroAutor");

            entity.HasIndex(e => e.AutorId, "IX_LivroAutor_AutorId");

            entity.HasOne(d => d.Autor).WithMany(p => p.LivroAutors)
                .HasForeignKey(d => d.AutorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LivroAutor_Autor");

            entity.HasOne(d => d.Livro).WithMany(p => p.LivroAutors)
                .HasForeignKey(d => d.LivroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LivroAutor_Livro");
        });

        modelBuilder.Entity<Utilizador>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Utilizad__3214EC07E1C94643");

            entity.ToTable("Utilizador");

            entity.HasIndex(e => e.Email, "IX_Utilizador_Email");

            entity.HasIndex(e => e.Nome, "IX_Utilizador_Nome");

            entity.Property(e => e.Email)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.Morada)
                .HasMaxLength(1024)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
            entity.Property(e => e.Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Telefone)
                .HasMaxLength(64)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}